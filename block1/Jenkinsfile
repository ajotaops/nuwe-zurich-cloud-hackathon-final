pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('TF Validate') {
            steps {
                 {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
                        credentialsId: "${params.AWS_ACCOUNT}"
                ]]) {
                    sh 'terraform init'
                    sh 'terraform validate'
                    }
                }
            }
        }
        stage('TF Plan') {
            steps {
                 {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
                        credentialsId: "${params.AWS_ACCOUNT}"
                ]]) {
                    sh 'terraform plan -out myplan'
                    }
                }
            }
        }
        stage('TF Approval') {
        steps {
            script {
            def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
            }
        }
        }
        stage('TF Apply') {
            steps {
                 {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
                        credentialsId: "${params.AWS_ACCOUNT}"
                ]]) {
                    sh 'terraform apply -input=false myplan'
                    }
                }
            }
        }
    }
}
